package mergeSortedArray;

import java.util.Arrays;

/**
 * Вам даны два массива целых чисел nums1и nums2, отсортированные в неубывающем порядке , и два целых числа mи n, представляющие количество элементов в nums1и nums2соответственно.
 *
 * Объединить nums1 и nums2в один массив, отсортированный в неубывающем порядке .
 *
 * Окончательный отсортированный массив не должен возвращаться функцией, а должен храниться внутри массиваnums1 . Чтобы приспособиться к этому, nums1имеет длину m + n, где первые mэлементы обозначают элементы, которые должны быть объединены, а последние nэлементы установлены 0и должны игнорироваться. nums2имеет длину n.
 *
 *
 *
 * Пример 1:
 *
 * Ввод: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
 *  Вывод: [1,2,2,3,5,6]
 *  Объяснение: Мы объединяем массивы [1,2,3] и [2,5,6].
 * Результатом слияния является [ 1 , 2 ,2, 3 ,5,6] с подчеркнутыми элементами, исходящими из nums1.
 * Пример 2:
 *
 * Ввод: nums1 = [1], m = 1, nums2 = [], n = 0
 *  Вывод: [1]
 *  Объяснение: Мы объединяем массивы [1] и [].
 * Результат слияния [1].
 * Пример 3:
 *
 * Ввод: nums1 = [0], m = 0, nums2 = [1], n = 1
 *  Вывод: [1]
 *  Объяснение: Мы объединяем массивы [] и [1].
 * Результат слияния [1].
 * Обратите внимание, что поскольку m = 0, в nums1 нет элементов. 0 нужен только для того, чтобы результат слияния поместился в nums1.
 *
 *
 * Ограничения:
 *
 * nums1.length == m + n
 * nums2.length == n
 * 0 <= m, n <= 200
 * 1 <= m + n <= 200
 * -109 <= nums1[i], nums2[j] <= 109
 *
 *
 * Дополнение: можете ли вы придумать алгоритм, работающий во O(m + n)времени?
 */

public class MergeSortedArray {

    public static void main(String[] args) {
        int[] nums1 = {1,2,3,0,0,0};
        int[] nums2 = {2, 5, 6};
        int m = 3, n = 3;

        merge(nums1, m, nums2, n);
    }

    public static void merge(int[] nums1, int m, int[] nums2, int n) {

        int p1 = m - 1, p2 = n - 1, i = m + n - 1;
        while (p2 >= 0) {
            if (p1 >=0 && nums1[p1] > nums2[p2]) {
                nums1[i--] = nums1[p1--];
            }
            else {
                nums1[i--] = nums2[p2--];
            }
        }
        System.out.println(Arrays.toString(nums1));
    }
}
